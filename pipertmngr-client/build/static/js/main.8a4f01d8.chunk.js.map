{"version":3,"sources":["components/TopBar/top-bar-view.js","config/server.js","utils/ServerUtils.js","components/TopBar/index.js","components/TopBar/top-bar-container.js","utils/ComponentUtils.js","components/RoutineForm/routine-form-view.js","components/RoutineForm/routine-form-container.js","components/RoutineForm/index.js","components/Sidebar/side-bar-view.js","components/Sidebar/side-bar-container.js","components/Sidebar/index.js","components/ComponentForm/component-form-view.js","components/ComponentForm/component-form-container.js","components/ComponentForm/index.js","components/BaseComponent/base-component-view.js","components/BaseNode/index.js","components/BaseNode/base-node-view.js","components/BaseComponent/index.js","components/BaseComponent/base-component-container.js","components/Pipeline/pipeline-view.js","components/Pipeline/pipeline-container.js","components/Pipeline/index.js","components/PipelineForm/pipeline-form-view.js","components/PipelineForm/pipeline-form-container.js","components/PipelineForm/index.js","components/WorkArea/work-area-view.js","config/routes.js","components/WorkArea/work-area-container.js","components/Master/master-container.js","components/Master/index.js","serviceWorker.js","index.js"],"names":["TopBarView","props","sideBarWidth","classes","makeStyles","theme","greeting","marginTop","pipelinePic","height","topBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","topBarShift","marginLeft","width","enteringScreen","menuButton","display","hide","isAlive","fontFamily","wifiOn","fill","wifiOff","useStyles","useTheme","Fragment","AppBar","position","className","clsx","isSideBarOpen","Toolbar","IconButton","edge","color","aria-label","onClick","toggleSideBar","Menu","src","Grid","justify","container","spacing","item","Typography","variant","Wifi","WifiOff","process","REST_API_URL","window","location","hostname","REST_API_PORT","Integer","String","QueueRead","QueueSend","RedisRead","RedisSend","HasToBeFirst","HasToBeLast","ServerUtils","a","fetch","ServerConfig","getRoutineParams","routineName","routineParams","json","getRoutines","routineList","routines","killPipeline","method","headers","Accept","savePipeline","pipeline","body","JSON","stringify","TopBarContainer","generateGreeting","time","Date","getHours","setState","isServerAlive","then","catch","state","this","isAliveInterval","setInterval","clearInterval","Component","ComponentUtils","createComponent","components","newComponentName","mutableComponents","mutableName","toString","forEach","componentData","name","push","deleteComponent","nameToDelete","filter","currentComponent","createRoutine","componentName","routineToCreate","updatedComponent","i","length","checkForRoutine","component","routineTypeName","routine_type_name","checkForRoutineType","routineType","routine_type","getAllComponentQueues","queues","QueueIn","QueueOut","currentRoutine","currentParams","Object","keys","params","j","getRedisTypes","queue","RedisIn","RedisOut","comRoutines","k","RoutineFormView","materialSelect","fontSize","genericInput","marginBottom","numberInput","dialogTitle","borderBottomColor","borderBottomStyle","borderBottomWidth","dialog","backgroundImage","backgroundSize","minHeight","overflowY","dialogActions","borderTopColor","borderTopStyle","borderTopWidth","background","Dialog","dialogBorder","open","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","routineData","FormControl","selectedComponent","redisQueue","Set","map","param","isRedisQueue","fullWidth","onChange","value","setSelectState","selectMargin","label","SelectProps","isClearable","isCreatable","msgNoOptionsAvailable","msgNoOptionsMatchFilter","options","Input","type","e","setInputState","placeholder","TextField","mapFields","DialogActions","notFilledFields","join","Button","closeRoutineForm","autoFocus","Clear","Done","RoutineFormContainer","parametersInput","isInteger","parseInt","target","trim","getParams","SideBarView","sideBar","flexShrink","sideBarOpen","sideBarClose","overflowX","chevronButton","justifyContent","routine","cursor","menuCaption","textAlign","credits","fontStyle","Drawer","paper","onClose","routes","routinesList","linksJSX","routeKey","index","routeData","TagName","icon","ListItem","NavLink","to","path","exact","button","key","dispName","activeClassName","ListItemIcon","ListItemText","primary","routinesJSX","shouldDisableAll","disableRoutine","listItemProps","disabled","undefined","toggleRoutineForm","CodeSharp","style","List","Divider","InputSharp","sideList","displayRoutineForm","RoutineForm","listQueueInRoutines","queueInRoutine","Snackbar","isComponentSelected","severity","SideBarContainer","toggleState","getAllRoutines","ComponentFormView","toggleComponentForm","ComponentFormContainer","BaseComponentView","onResize","jsPlumbInstance","repaintEverything","jsPlumbLib","reset","importDefaults","Connector","Anchors","Overlays","currRoutine","nextRoutine","nodeRefs","linkList","currLink","source","connect","current","endpoint","anchor","overlays","link","cssClass","setTimeout","jsplumb","jsPlumb","getInstance","addEventListener","gridItem","xs","Card","glow","isSelected","CardHeader","subheader","Delete","closeButton","CardContent","changeSelected","componentCard","Array","isArray","emptyComponent","thinText","handleWidth","handleHeight","children","withStyles","border","boxShadow","float","backgroundColor","BaseNodeView","React","forwardRef","ref","cardItem","nodeColor","cardHeader","padding","cardContent","paddingBottom","cardFooter","powerLogo","subheaderTypographyProps","Power","ports","BaseComponentContainer","composeLinks","hasOwnProperty","currNode","nextNode","createNodesDOM","nodesList","baseNodeRefs","createRef","randomColor","BaseNode","nextProps","title","arrowMargin","redisLogo","arrow","PipelineView","getIOArrow","IOData","isInput","noRedis","redisKeys","streamKeys","IOTypes","IOKeys","redisIn","streamIn","substring","Math","min","redisOut","streamOut","hasRedis","includes","html","tag","redisExistence","comp","getComponentIO","prefixArrow","suffixArrow","BaseComponent","changeSelectedComponent","composeComponentsDOM","PipelineContainer","firstRoutine","finalRoutine","setSelectedComponent","yamlBrowse","cachedButton","yamlButton","alignItems","size","selectedOption","isLocalStorageAvailable","onFileChange","inputProps","accept","togglePipelineForm","chosenFile","loadPipeline","PipelineFormContainer","localStorage","getItem","files","fileReader","FileReader","onloadend","reader","result","readAsText","loadingPhrases","WorkAreaView","content","flexGrow","marginRight","contentShift","componentFab","bottom","right","minWidth","pipelineOptions","loadFab","killFab","saveFab","spinner","borderRadius","paddingLeft","paddingRight","emptyWorkArea","showSuccessMessage","autoHideDuration","toggleSuccessMessage","successMessage","showErrorMessage","toggleErrorMessage","errorMessage","direction","Pipeline","showComponentForm","ComponentForm","showPipelineForm","PipelineForm","Fab","Add","FileCopy","showSpinner","CircularProgress","floor","random","Link","href","home","toggleSpinner","spinnerState","buffer","isYaml","routineTypes","pipelineData","jsYAML","load","paramsObject","parse","setPipeline","userComponents","componentsToSend","setItem","currRoutineIndex","currParam","parameterValue","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","YAML","document","createElement","download","encodeURIComponent","appendChild","click","removeChild","CreateSharp","createMuiTheme","palette","main","typography","overrides","MuiCssBaseline","MasterContainer","setComponentSelectedState","stateToSet","toggleMode","routineWithParams","createRoutes","explicit","render","bind","ThemeProvider","StylesProvider","CssBaseline","TopBar","RoutesConfig","isLocalhost","Boolean","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","ReactDOM","Master","getElementById","URL","origin","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8a4f01d8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  makeStyles,\r\n  useTheme,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport { Menu, Wifi, WifiOff } from \"@material-ui/icons\";\r\n\r\nexport default function TopBarView(props) {\r\n  const sideBarWidth = props.sideBarWidth ? props.sideBarWidth : 240;\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    greeting: {\r\n      marginTop: \"0.2em\"\r\n    },\r\n    pipelinePic: {\r\n      height: \"3em\"\r\n    },\r\n    topBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      })\r\n    },\r\n    topBarShift: {\r\n      marginLeft: sideBarWidth,\r\n      width: `calc(100% - ${sideBarWidth}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      })\r\n    },\r\n    menuButton: {\r\n      display: \"block\"\r\n    },\r\n    hide: {\r\n      display: \"none\"\r\n    },\r\n    isAlive: {\r\n      fontFamily: \"Roboto Thin\"\r\n    },\r\n    wifiOn: {\r\n      marginTop: \"0.1em\",\r\n      fill: \"white\"\r\n    },\r\n    wifiOff: {\r\n      marginTop: \"0.1em\",\r\n      fill: \"black\"\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.topBar, {\r\n          [classes.topBarShift]: props.isSideBarOpen\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: props.isSideBarOpen\r\n            })}\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={props.toggleSideBar}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n          <img className={classes.pipelinePic} src=\"/images/pipeline.png\"></img>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Grid justify=\"space-between\" container spacing={10}>\r\n            <Grid item>\r\n              <Typography variant=\"h4\">PIPELINE MANAGER</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography className={classes.greeting} variant=\"h5\">\r\n                {props.greeting}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography className={classes.isAlive} variant=\"h6\">\r\n                {\"PIPELINE SERVER IS \" +\r\n                  (props.isAlive ? \"CONNECTED\" : \"DISCONNECTED\")}\r\n                &nbsp;\r\n                {props.isAlive ? (\r\n                  <Wifi className={classes.wifiOn} />\r\n                ) : (\r\n                  <WifiOff className={classes.wifiOff} />\r\n                )}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","export default {\r\n  SERVER_URL:\r\n    (process.env.REST_API_URL\r\n      ? process.env.REST_API_URL\r\n      : \"http://\" + window.location.hostname) +\r\n    \":\" +\r\n    (process.env.REST_API_PORT ? process.env.REST_API_PORT : \"3000\"),\r\n  ROUTE_IS_ALIVE: \"/isAlive\",\r\n  ROUTE_GET_ROUTINES: \"/routines\",\r\n  ROUTE_GET_ROUTINE_PARAMS: \"/routineParams\",\r\n  ROUTE_SAVE_PIPELINE: \"/pipeline\",\r\n  ROUTE_KILL_PIPELINE: \"/kill\",\r\n  QUEUE_READ: \"message_queue\",\r\n  QUEUE_SEND: \"out_queue\",\r\n  REDIS_READ: \"redis_read_key\",\r\n  REDIS_SEND: \"redis_send_key\",\r\n  DataTypes: {\r\n    Integer: \"Integer\",\r\n    String: \"String\",\r\n    QueueRead: \"QueueIn\",\r\n    QueueSend: \"QueueOut\",\r\n    RedisRead: \"RedisIn\",\r\n    RedisSend: \"RedisOut\",\r\n  },\r\n  RoutineTypes: {\r\n    HasToBeFirst: 0,\r\n    HasToBeLast: 2,\r\n  },\r\n};\r\n","import ServerConfig from \"../config/server\";\r\n\r\nconst ServerUtils = {\r\n  isAlive: async () => {\r\n    return fetch(ServerConfig.SERVER_URL + ServerConfig.ROUTE_IS_ALIVE);\r\n  },\r\n  getRoutineParams: async routineName => {\r\n    const routineParams = await fetch(\r\n      ServerConfig.SERVER_URL +\r\n        ServerConfig.ROUTE_GET_ROUTINE_PARAMS +\r\n        \"/\" +\r\n        routineName\r\n    );\r\n\r\n    return routineParams.json();\r\n  },\r\n  getRoutines: async () => {\r\n    let routineList = await fetch(\r\n      ServerConfig.SERVER_URL + ServerConfig.ROUTE_GET_ROUTINES\r\n    );\r\n\r\n    routineList = await routineList.json();\r\n\r\n    return routineList.routines;\r\n  },\r\n  killPipeline: async () => {\r\n    return fetch(ServerConfig.SERVER_URL + ServerConfig.ROUTE_KILL_PIPELINE, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n  },\r\n  savePipeline: async pipeline => {\r\n    return fetch(ServerConfig.SERVER_URL + ServerConfig.ROUTE_SAVE_PIPELINE, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(pipeline)\r\n    });\r\n  }\r\n};\r\n\r\nexport default ServerUtils;\r\n","import TopBarContainer from \"./top-bar-container\";\r\nexport default TopBarContainer;\r\n","import React, { Component } from \"react\";\r\nimport TopBarView from \"./top-bar-view\";\r\nimport ServerUtils from \"../../utils/ServerUtils\";\r\n\r\nexport class TopBarContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      greeting: \"\",\r\n      isAlive: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.isServerAlive();\r\n    this.generateGreeting();\r\n    this.setState({\r\n      isAliveInterval: setInterval(this.isServerAlive, 15000)\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.isAliveInterval);\r\n  }\r\n\r\n  generateGreeting = () => {\r\n    let time = new Date().getHours();\r\n    let greeting = \"\";\r\n\r\n    if (time >= 4 && time < 12) {\r\n      greeting = \"GOOD MORNING!\";\r\n    }\r\n    if (time >= 12 && time <= 16) {\r\n      greeting = \"GOOD AFTERNOON!\";\r\n    } else if (time >= 17 && time <= 21) {\r\n      greeting = \"GOOD EVENING!\";\r\n    } else {\r\n      greeting = \"GOOD NIGHT!\";\r\n    }\r\n\r\n    this.setState({\r\n      greeting\r\n    });\r\n  };\r\n\r\n  isServerAlive = () => {\r\n    ServerUtils.isAlive()\r\n      .then(() => {\r\n        this.setState({\r\n          isAlive: true\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          isAlive: false\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <TopBarView\r\n        isAlive={this.state.isAlive}\r\n        isSideBarOpen={this.props.isSideBarOpen}\r\n        toggleSideBar={this.props.toggleSideBar}\r\n        greeting={this.state.greeting}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopBarContainer;\r\n","import ServerConfig from \"../config/server\";\r\n\r\nconst ComponentUtils = {\r\n  createComponent: (components, newComponentName) => {\r\n    let mutableComponents = [...components];\r\n    let mutableName = newComponentName.toString();\r\n\r\n    mutableComponents.forEach((componentData) => {\r\n      if (mutableName === componentData.name) {\r\n        mutableName = \"Copy of \" + mutableName;\r\n      }\r\n    });\r\n\r\n    mutableComponents.push({\r\n      name: mutableName,\r\n    });\r\n\r\n    return mutableComponents;\r\n  },\r\n  deleteComponent: (components, nameToDelete) => {\r\n    return components.filter((currentComponent) => {\r\n      return currentComponent.name !== nameToDelete;\r\n    });\r\n  },\r\n  createRoutine: (components, componentName, routineToCreate) => {\r\n    let mutableComponents = [...components];\r\n    let updatedComponent = null;\r\n\r\n    for (let i = 0; i < mutableComponents.length; i++) {\r\n      let currentComponent = mutableComponents[i];\r\n\r\n      if (componentName === currentComponent.name) {\r\n        if (!currentComponent.routines) {\r\n          currentComponent.routines = [];\r\n        }\r\n\r\n        currentComponent.routines.push(routineToCreate);\r\n        updatedComponent = currentComponent;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return {\r\n      components: mutableComponents,\r\n      updatedComponent,\r\n    };\r\n  },\r\n  checkForRoutine: (component, routineTypeName) => {\r\n    if (!component || !component.routines) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < component.routines.length; i++) {\r\n      if (component.routines[i].routine_type_name === routineTypeName) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  },\r\n  checkForRoutineType: (component, routineType) => {\r\n    if (!component || !component.routines) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < component.routines.length; i++) {\r\n      if (component.routines[i].routine_type === routineType) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  },\r\n  getAllComponentQueues: (component) => {\r\n    let queues = { QueueIn: [], QueueOut: [] };\r\n\r\n    if (!component || !component.routines) {\r\n      return queues;\r\n    }\r\n\r\n    for (let i = 0; i < component.routines.length; i++) {\r\n      let currentRoutine = component.routines[i];\r\n      let currentParams = Object.keys(currentRoutine.params);\r\n      for (let j = 0; j < currentParams.length; j++) {\r\n        if (currentParams[j] === ServerConfig.QUEUE_READ) {\r\n          queues.QueueIn.push(currentRoutine.params[currentParams[j]]);\r\n        } else if (currentParams[j] === ServerConfig.QUEUE_SEND) {\r\n          queues.QueueOut.push(currentRoutine.params[currentParams[j]]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return queues;\r\n  },\r\n\r\n  getRedisTypes: (components) => {\r\n    var queue = { RedisIn: [], RedisOut: [] };\r\n\r\n    if (!components) {\r\n      return queue;\r\n    }\r\n\r\n    for (let i = 0; i < components.length; i++) {\r\n      let comRoutines = components[i].routines;\r\n      if (comRoutines) {\r\n        for (let j = 0; j < comRoutines.length; j++) {\r\n          let params = Object.keys(comRoutines[j].params);\r\n          for (let k = 0; k < params.length; k++) {\r\n            if (params[k] === ServerConfig.REDIS_READ) {\r\n              queue.RedisIn.push(comRoutines[j].params[params[k]]);\r\n            } else if (params[k] === ServerConfig.REDIS_SEND) {\r\n              queue.RedisOut.push(comRoutines[j].params[params[k]]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return queue;\r\n  },\r\n};\r\n\r\nexport default ComponentUtils;\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  makeStyles,\r\n  Typography,\r\n  Input,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { Done, Clear } from \"@material-ui/icons\";\r\nimport ComponentUtils from \"../../utils/ComponentUtils\";\r\nimport ServerConfig from \"../../config/server\";\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\n\r\nexport default function RoutineFormView(props) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    materialSelect: {\r\n      width: 240,\r\n      fontFamily: \"Roboto, Arial\",\r\n      fontSize: \"16px\",\r\n    },\r\n    genericInput: {\r\n      marginBottom: \"1rem\",\r\n    },\r\n    numberInput: {\r\n      marginTop: \"16px\",\r\n    },\r\n    dialogTitle: {\r\n      borderBottomColor: \"black\",\r\n      borderBottomStyle: \"solid\",\r\n      borderBottomWidth: \"0.01rem\",\r\n    },\r\n    dialog: {\r\n      backgroundImage: \"url(./images/formImage.jpg)\",\r\n      backgroundSize: \"cover\",\r\n      minHeight: \"30rem\",\r\n      overflowY: \"auto\",\r\n    },\r\n    dialogActions: {\r\n      borderTopColor: \"black\",\r\n      borderTopStyle: \"solid\",\r\n      borderTopWidth: \"0.01rem\",\r\n      background: \"linear-gradient(90deg, #b2b2b2 0%, white 40%, white 70%)\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const mapFields = () => {\r\n    let { QueueIn, QueueOut } = ComponentUtils.getAllComponentQueues(\r\n      props.selectedComponent\r\n    );\r\n\r\n    let { RedisIn, RedisOut } = ComponentUtils.getRedisTypes(props.components);\r\n    //Concat the in and out arrays and delete duplicate in redis queue array.\r\n    let redisQueue = [...new Set([...RedisIn, ...RedisOut])];\r\n\r\n    return Object.keys(props.routineParams).map(function (param) {\r\n      if (\r\n        param === ServerConfig.REDIS_SEND ||\r\n        param === ServerConfig.REDIS_READ ||\r\n        param === ServerConfig.QUEUE_READ ||\r\n        param === ServerConfig.QUEUE_SEND\r\n      ) {\r\n        var isRedisQueue =\r\n          param === ServerConfig.REDIS_SEND ||\r\n          param === ServerConfig.REDIS_READ;\r\n        return (\r\n          <div className={classes.genericInput}>\r\n            <SingleSelect\r\n              fullWidth={false}\r\n              onChange={(value) => props.setSelectState(value, param)}\r\n              className={`${classes.materialSelect} ${classes.selectMargin}`}\r\n              label={param}\r\n              SelectProps={{\r\n                isClearable: true,\r\n                isCreatable: true,\r\n                msgNoOptionsAvailable:\r\n                  \"No queues available. Type new queue name...\",\r\n                msgNoOptionsMatchFilter: \"No queue matches your query.\",\r\n              }}\r\n              options={\r\n                isRedisQueue\r\n                  ? redisQueue\r\n                  : param === ServerConfig.QUEUE_READ\r\n                  ? QueueOut\r\n                  : QueueIn\r\n              }\r\n            ></SingleSelect>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      if (props.routineParams[param] === ServerConfig.DataTypes.Integer) {\r\n        return (\r\n          <div className={classes.genericInput}>\r\n            <Input\r\n              className={classes.numberInput}\r\n              type=\"number\"\r\n              onChange={(e) => props.setInputState(e, param, true)}\r\n              placeholder={param}\r\n            ></Input>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <div className={classes.genericInput}>\r\n          <TextField\r\n            onChange={(e) => props.setInputState(e, param)}\r\n            label={param}\r\n          ></TextField>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      className={classes.dialogBorder}\r\n      open={true}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle className={classes.dialogTitle} id=\"alert-dialog-title\">\r\n        {\"CREATE-A-ROUTINE\"}\r\n      </DialogTitle>\r\n      <DialogContent className={classes.dialog}>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {'ENTER THE PARAMETERS FOR \"' +\r\n            (props.routineData && props.routineData.name + '\":')}\r\n        </DialogContentText>\r\n        <FormControl>{mapFields()}</FormControl>\r\n      </DialogContent>\r\n      <DialogActions className={classes.dialogActions}>\r\n        {props.notFilledFields.length ? (\r\n          <Typography variant=\"subtitle2\" color=\"error\">\r\n            {\"Please fill out \" + props.notFilledFields.join(\", \") + \".\"}\r\n          </Typography>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <Button color=\"secondary\" onClick={props.closeRoutineForm} autoFocus>\r\n          <Clear />\r\n          CLOSE\r\n        </Button>\r\n        <Button color=\"primary\" onClick={props.createRoutine} autoFocus>\r\n          <Done />\r\n          CREATE\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport RoutineFormView from \"./routine-form-view\";\r\nimport ServerUtils from \"../../utils/ServerUtils\";\r\nimport server from \"../../config/server\";\r\n\r\nexport class RoutineFormContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      routineParams: {},\r\n      notFilledFields: [],\r\n      parametersInput: {},\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.getParams();\r\n  }\r\n\r\n  setSelectState = (value, param) => {\r\n    let { parametersInput } = this.state;\r\n    parametersInput[param] = value;\r\n\r\n    this.setState({\r\n      parametersInput,\r\n    });\r\n  };\r\n\r\n  setInputState = (e, param, isInteger) => {\r\n    let { parametersInput } = this.state;\r\n    parametersInput[param] = isInteger\r\n      ? parseInt(e.target.value)\r\n      : e.target.value;\r\n\r\n    this.setState({\r\n      parametersInput,\r\n    });\r\n  };\r\n\r\n  createRoutine = () => {\r\n    let { parametersInput } = this.state;\r\n    let notFilledFields = [];\r\n\r\n    Object.keys(this.state.routineParams).forEach((param) => {\r\n      if (\r\n        !parametersInput[param] ||\r\n        parametersInput[param].toString().trim() === \"\"\r\n      ) {\r\n        notFilledFields.push(param);\r\n      }\r\n    });\r\n\r\n    if (notFilledFields.length === 0) {\r\n      this.props.createRoutine({\r\n        routine_type_name: this.props.routineData.name,\r\n        routine_type: this.props.routineData.type,\r\n        params: {\r\n          ...parametersInput,\r\n        },\r\n      });\r\n\r\n      this.props.closeRoutineForm();\r\n    } else {\r\n      this.setState({\r\n        notFilledFields,\r\n      });\r\n    }\r\n  };\r\n\r\n  getParams = async () => {\r\n    const routineParams = await ServerUtils.getRoutineParams(\r\n      this.props.routineData.name\r\n    );\r\n    this.setState({\r\n      routineParams,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <RoutineFormView\r\n        selectedComponent={this.props.selectedComponent}\r\n        routineData={this.props.routineData}\r\n        routineParams={this.state.routineParams}\r\n        createComponent={this.createComponent}\r\n        createRoutine={this.createRoutine}\r\n        closeRoutineForm={this.props.closeRoutineForm}\r\n        notFilledFields={this.state.notFilledFields}\r\n        setInputState={this.setInputState}\r\n        setSelectState={this.setSelectState}\r\n        components={this.props.components}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoutineFormContainer;\r\n","import RoutineFormContainer from \"./routine-form-container\";\r\nexport default RoutineFormContainer;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Drawer,\r\n  makeStyles,\r\n  IconButton,\r\n  Divider,\r\n  Typography,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport { ChevronLeftSharp, InputSharp, CodeSharp } from \"@material-ui/icons\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport RoutineFormContainer from \"../RoutineForm\";\r\nimport ComponentUtils from \"../../utils/ComponentUtils\";\r\nimport ServerConfig from \"../../config/server\";\r\n\r\nexport default function SideBarView(props) {\r\n  const sideList = (routes = {}, routinesList) => {\r\n    const linksJSX = Object.keys(routes).map(function (routeKey, index) {\r\n      let routeData = routes[routeKey];\r\n      const TagName = routeData.icon;\r\n\r\n      return (\r\n        <ListItem\r\n          component={NavLink}\r\n          to={routeData.path}\r\n          exact\r\n          button\r\n          key={routeData.dispName}\r\n          activeClassName=\"Mui-selected\"\r\n        >\r\n          <ListItemIcon>\r\n            <TagName />\r\n          </ListItemIcon>\r\n          <ListItemText primary={routeData.dispName} />\r\n        </ListItem>\r\n      );\r\n    });\r\n\r\n    let routinesJSX = null;\r\n\r\n    if (routinesList) {\r\n      let shouldDisableAll = ComponentUtils.checkForRoutineType(\r\n        props.selectedComponent,\r\n        ServerConfig.RoutineTypes.HasToBeLast\r\n      );\r\n\r\n      routinesJSX = routinesList.map(function (routineData) {\r\n        let disableRoutine = false;\r\n\r\n        if (\r\n          !props.selectedComponent ||\r\n          shouldDisableAll ||\r\n          (routineData.type !== ServerConfig.RoutineTypes.HasToBeFirst &&\r\n            routineData.type !== ServerConfig.RoutineTypes.HasToBeLast &&\r\n            !ComponentUtils.checkForRoutineType(\r\n              props.selectedComponent,\r\n              ServerConfig.RoutineTypes.HasToBeFirst\r\n            )) ||\r\n          (routineData.type === ServerConfig.RoutineTypes.HasToBeFirst &&\r\n            ComponentUtils.checkForRoutineType(\r\n              props.selectedComponent,\r\n              ServerConfig.RoutineTypes.HasToBeFirst\r\n            ))\r\n        ) {\r\n          disableRoutine = true;\r\n        }\r\n\r\n        let listItemProps = {\r\n          disabled: disableRoutine,\r\n          onClick: !disableRoutine\r\n            ? () => props.toggleRoutineForm(routineData, true)\r\n            : undefined,\r\n        };\r\n\r\n        return (\r\n          <ListItem\r\n            {...listItemProps}\r\n            className={!disableRoutine && classes.routine}\r\n          >\r\n            <ListItemIcon>\r\n              <CodeSharp />\r\n            </ListItemIcon>\r\n            <ListItemText primary={routineData.name} />\r\n          </ListItem>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div style={{ marginTop: \"0.3em\" }}>\r\n        <List>{linksJSX}</List>\r\n        <Divider />\r\n        {routinesJSX && (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <InputSharp />\r\n              </ListItemIcon>\r\n              <ListItemText primary={<b>ROUTINES</b>} />\r\n            </ListItem>\r\n            <List>{routinesJSX}</List>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const sideBarWidth = props.sideBarWidth ? props.sideBarWidth : 240;\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    sideBar: {\r\n      width: sideBarWidth,\r\n      flexShrink: 0,\r\n    },\r\n    sideBarOpen: {\r\n      width: sideBarWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    sideBarClose: {\r\n      overflowX: \"hidden\",\r\n      width: 0,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    chevronButton: {\r\n      justifyContent: \"flex-start\",\r\n    },\r\n    routine: {\r\n      cursor: \"pointer\",\r\n      \"&:hover\": {\r\n        color: \"blue\",\r\n      },\r\n    },\r\n    menuCaption: {\r\n      marginTop: \"0.3em\",\r\n      fontFamily: \"Roboto Thin\",\r\n      textAlign: \"center\",\r\n    },\r\n    credits: {\r\n      marginTop: \"75%\",\r\n      textAlign: \"center\",\r\n      fontStyle: \"italic\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        className={clsx(classes.drawer, {\r\n          [classes.sideBarOpen]: props.isSideBarOpen,\r\n          [classes.sideBarClose]: !props.isSideBarOpen,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.sideBarOpen]: props.isSideBarOpen,\r\n            [classes.sideBarClose]: !props.isSideBarOpen,\r\n          }),\r\n        }}\r\n        variant=\"permanent\"\r\n        open={props.isSideBarOpen}\r\n        onClose={props.toggleSideBar}\r\n      >\r\n        <Typography variant=\"h4\" className={classes.menuCaption}>\r\n          MENU\r\n        </Typography>\r\n        {/* <IconButton\r\n          className={classes.chevronButton}\r\n          onClick={props.toggleSideBar}\r\n        >\r\n          <ChevronLeftSharp></ChevronLeftSharp>\r\n          <Typography>MENU</Typography>\r\n        </IconButton> */}\r\n        {sideList(props.routes, props.routinesList)}\r\n        <div className={classes.credits}>PipeRTManager V1.0 © 2020</div>\r\n      </Drawer>\r\n\r\n      {props.displayRoutineForm && (\r\n        <RoutineFormContainer\r\n          selectedComponent={props.selectedComponent}\r\n          routineData={props.routineData}\r\n          createRoutine={props.createRoutine}\r\n          listQueueInRoutines={props.queueInRoutine}\r\n          closeRoutineForm={() => props.toggleRoutineForm(null, false)}\r\n          components={props.components}\r\n        />\r\n      )}\r\n\r\n      <Snackbar open={!props.isComponentSelected}>\r\n        <MuiAlert variant=\"filled\" severity=\"info\">\r\n          <b>CREATE-A-ROUTINE:</b> YOU SHOULD SELECT A COMPONENT FIRST.\r\n        </MuiAlert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport SideBarView from \"./side-bar-view\";\r\nimport ServerUtils from \"../../utils/ServerUtils\";\r\nimport server from \"../../config/server\";\r\n\r\nexport class SideBarContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      routinesList: [],\r\n      displayRoutineForm: false,\r\n      isComponentSelected: true,\r\n    };\r\n\r\n    this.getAllRoutines();\r\n  }\r\n\r\n  toggleRoutineForm = (routineData, toggleState) => {\r\n    if (!toggleState) {\r\n      this.setState({\r\n        displayRoutineForm: false,\r\n      });\r\n    } else if (this.props.isComponentSelected) {\r\n      this.setState({\r\n        isComponentSelected: true,\r\n        displayRoutineForm: true,\r\n        routineData: routineData,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isComponentSelected: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  getAllRoutines = async () => {\r\n    const routinesList = await ServerUtils.getRoutines();\r\n    this.setState({\r\n      routinesList,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SideBarView\r\n        sideBarWidth={this.props.sideBarWidth}\r\n        isSideBarOpen={this.props.isSideBarOpen}\r\n        toggleSideBar={this.props.toggleSideBar}\r\n        routes={this.props.routes}\r\n        routinesList={this.state.routinesList}\r\n        displayRoutineForm={this.state.displayRoutineForm}\r\n        toggleRoutineForm={this.toggleRoutineForm}\r\n        routineData={this.state.routineData}\r\n        createRoutine={this.props.createRoutine}\r\n        isComponentSelected={this.state.isComponentSelected}\r\n        selectedComponent={this.props.selectedComponent}\r\n        components={this.props.components}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBarContainer;\r\n","import SideBarContainer from \"./side-bar-container\";\r\nexport default SideBarContainer;\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport { Done, Clear } from \"@material-ui/icons\";\r\n\r\nexport default function ComponentFormView(props) {\r\n  return (\r\n    <Dialog\r\n      open={true}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{\"CREATE-A-COMPONENT\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          HOW DO YOU WANT TO CALL YOUR BRAND NEW COMPONENT?\r\n        </DialogContentText>\r\n        <TextField\r\n          label=\"TYPE HERE...\"\r\n          onChange={e => props.setInputState(e)}\r\n        ></TextField>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          color=\"secondary\"\r\n          onClick={() => props.toggleComponentForm(false)}\r\n          autoFocus\r\n        >\r\n          <Clear />\r\n          CLOSE\r\n        </Button>\r\n        <Button color=\"primary\" onClick={props.createComponent} autoFocus>\r\n          <Done />\r\n          CREATE\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ComponentFormView from \"./component-form-view\";\r\n\r\nexport class ComponentFormContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      componentName: \"\",\r\n    };\r\n  }\r\n\r\n  setInputState = (e) => {\r\n    this.setState({\r\n      componentName: e.target.value,\r\n    });\r\n  };\r\n\r\n  createComponent = () => {\r\n    let name = this.state.componentName;\r\n\r\n    if (name === \"\") {\r\n      name = \"Untitled Component\";\r\n    }\r\n\r\n    this.props.createComponent(name);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ComponentFormView\r\n        toggleComponentForm={this.props.toggleComponentForm}\r\n        createComponent={this.createComponent}\r\n        setInputState={this.setInputState}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ComponentFormContainer;\r\n","import ComponentFormContainer from \"./component-form-container\";\r\nexport default ComponentFormContainer;\r\n","import ReactResizeDetector from \"react-resize-detector\";\r\nimport React, { Component } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  withStyles,\r\n  Card,\r\n  Grid,\r\n  CardContent,\r\n  CardHeader,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport \"./base-component-style.css\";\r\nimport \"jsplumb/css/jsplumbtoolkit-defaults.css\";\r\nimport jsplumb from \"jsplumb\";\r\n\r\nconst styles = () => ({\r\n  gridItem: {\r\n    marginBottom: \"1.5em\",\r\n    cursor: \"initial\"\r\n  },\r\n  glow: {\r\n    border: \"2.5px solid rgb(86, 180, 239)\",\r\n    boxShadow:\r\n      \"0px 1px 3px rgba(0, 0, 0, 0.05) inset, 0px 0px 8px rgba(82, 168, 236, 0.6)\"\r\n  },\r\n  closeButton: {\r\n    cursor: \"pointer\",\r\n    float: \"right\",\r\n    width: \"20px\",\r\n    cursor: \"pointer\"\r\n  },\r\n  componentCard: {\r\n    backgroundColor: \"#b5b5b533\",\r\n    cursor: \"pointer\"\r\n  },\r\n  emptyComponent: {\r\n    textAlign: \"center\",\r\n    marginBottom: \"2.5em\"\r\n  },\r\n  thinText: {\r\n    fontFamily: \"Roboto Thin\"\r\n  }\r\n});\r\n\r\nexport class BaseComponentView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.routineList) {\r\n      this.jsPlumbInstance.reset();\r\n      this.jsPlumbLib.reset();\r\n      this.jsPlumbInstance.importDefaults({\r\n        Connector: [\"Straight\"],\r\n        Anchors: [\"Right\", \"LeftMiddle\"],\r\n        Overlays: [[\"Arrow\", { location: 1 }]]\r\n      });\r\n\r\n      for (let index = 0; index < this.props.routineList.length; index++) {\r\n        let currRoutine = this.props.componentData.name + \"_item_\" + index;\r\n        let nextRoutine =\r\n          this.props.componentData.name + \"_item_\" + (index + 1);\r\n        if (\r\n          this.props.nodeRefs[currRoutine] &&\r\n          this.props.nodeRefs[nextRoutine]\r\n        ) {\r\n          this.props.linkList.forEach(currLink => {\r\n            if (\r\n              currLink.source === currRoutine &&\r\n              currLink.target === nextRoutine\r\n            ) {\r\n              this.jsPlumbInstance.connect({\r\n                source: this.props.nodeRefs[currRoutine].current,\r\n                target: this.props.nodeRefs[nextRoutine].current,\r\n                endpoint: \"Blank\",\r\n                anchor: \"Continuous\",\r\n                overlays: [\r\n                  [\r\n                    \"Label\",\r\n                    {\r\n                      label: currLink.link,\r\n                      location: [0.5],\r\n                      cssClass: \"endpointSourceLabel\"\r\n                    }\r\n                  ]\r\n                ]\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      // TODO: Find a cleaner solution\r\n      setTimeout(() => {\r\n        this.onResize();\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.jsPlumbLib = jsplumb.jsPlumb;\r\n    this.jsPlumbInstance = this.jsPlumbLib.getInstance();\r\n    window.addEventListener(\"resize\", this.onResize);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.jsPlumbLib.reset();\r\n    this.jsPlumbInstance.reset();\r\n  }\r\n\r\n  onResize = () => {\r\n    this.jsPlumbInstance.repaintEverything();\r\n  };\r\n\r\n  deleteComponent = () => {\r\n    this.jsPlumbLib.reset();\r\n    this.jsPlumbInstance.reset();\r\n    this.props.deleteComponent();\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Grid item className={classes.gridItem} xs={4}>\r\n        <Card\r\n          className={clsx({\r\n            [classes.glow]: this.props.isSelected\r\n          })}\r\n        >\r\n          <CardHeader\r\n            subheader={\r\n              <React.Fragment>\r\n                {this.props.componentData.name}\r\n                <Delete\r\n                  onClick={this.deleteComponent}\r\n                  className={classes.closeButton}\r\n                ></Delete>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n          <CardContent\r\n            onClick={() => this.props.changeSelected(this.props.componentData)}\r\n            className={classes.componentCard}\r\n          >\r\n            {!this.props.componentData.routines ||\r\n            (Array.isArray(this.props.componentData.routines) &&\r\n              this.props.componentData.routines.length === 0) ? (\r\n              <div className={classes.emptyComponent}>\r\n                <div>\r\n                  <Typography className={classes.thinText} variant=\"h5\">\r\n                    IT'S LONELY IN HERE... &#128579;\r\n                  </Typography>\r\n                </div>\r\n                <div>\r\n                  <Typography variant=\"h5\">\r\n                    ADD SOME ROUTINES TO THE MIX!\r\n                  </Typography>\r\n                </div>\r\n                <div>\r\n                  <Typography variant=\"subtitle2\">(CLICK ME!)</Typography>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <ReactResizeDetector\r\n                handleWidth\r\n                handleHeight\r\n                onResize={this.onResize}\r\n              >\r\n                <React.Fragment>{this.props.children}</React.Fragment>\r\n              </ReactResizeDetector>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(BaseComponentView);\r\n","import BaseNodeView from \"./base-node-view\";\r\nexport default BaseNodeView;\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  useTheme,\r\n  Card,\r\n  CardHeader,\r\n  CardContent\r\n} from \"@material-ui/core\";\r\nimport { Power } from \"@material-ui/icons\";\r\n\r\nconst BaseNodeView = React.forwardRef((props, ref) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    cardItem: {\r\n      textAlign: \"left\",\r\n      float: \"left\",\r\n      background: props.nodeColor\r\n    },\r\n    cardHeader: {\r\n      padding: \"0.3rem\",\r\n      backgroundColor: \"black\"\r\n    },\r\n    cardContent: {\r\n      textAlign: \"center\",\r\n      padding: \"0.3rem\",\r\n      cursor: \"pointer\",\r\n      color: \"white\",\r\n      fontSize: \"0.7em\",\r\n      \"&:last-child\": {\r\n        paddingBottom: 0\r\n      }\r\n    },\r\n    cardFooter: {\r\n      textAlign: \"right\",\r\n      marginTop: \"20%\",\r\n      fontSize: \"0.8rem\"\r\n    },\r\n    powerLogo: {\r\n      fontSize: \"0.8rem\"\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card variant=\"outlined\" className={classes.cardItem}>\r\n      <CardHeader\r\n        className={classes.cardHeader}\r\n        subheader={props.routineName}\r\n        subheaderTypographyProps={{\r\n          variant: \"subtitle2\",\r\n          style: { color: \"white\" }\r\n        }}\r\n      ></CardHeader>\r\n      <CardContent className={classes.cardContent} ref={ref}>\r\n        <div>{props.routineTypeName}</div>\r\n        <div className={classes.cardFooter}>\r\n          <Power className={classes.powerLogo} />\r\n          &nbsp;{props.ports}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default BaseNodeView;\r\n","import BaseComponentContainer from \"./base-component-container\";\r\nexport default BaseComponentContainer;\r\n","import React, { Component } from \"react\";\r\nimport BaseComponentView from \"./base-component-view\";\r\nimport ServerConfig from \"../../config/server\";\r\nimport BaseNodeView from \"../BaseNode\";\r\n\r\nexport class BaseComponentContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n    this.baseNodeRefs = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      nodeRefs: this.baseNodeRefs,\r\n      routineList: this.props.componentData.routines\r\n        ? [...this.props.componentData.routines]\r\n        : []\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      routineList: nextProps.componentData.routines\r\n        ? [...nextProps.componentData.routines]\r\n        : []\r\n    });\r\n  }\r\n\r\n  composeLinks = () => {\r\n    let linkList = [];\r\n    if (this.state.routineList) {\r\n      let { routineList } = this.state;\r\n\r\n      for (let i = 0; i < routineList.length - 1; i++) {\r\n        let currRoutine = routineList[i];\r\n        let nextRoutine = routineList[i + 1];\r\n\r\n        if (\r\n          currRoutine.params.hasOwnProperty(ServerConfig.QUEUE_SEND) &&\r\n          nextRoutine.params.hasOwnProperty(ServerConfig.QUEUE_READ) &&\r\n          currRoutine.params[ServerConfig.QUEUE_SEND] ===\r\n            nextRoutine.params[ServerConfig.QUEUE_READ]\r\n        ) {\r\n          // Find the nodes\r\n          let currNode = this.props.componentData.name + \"_item_\" + i;\r\n          let nextNode = this.props.componentData.name + \"_item_\" + (i + 1);\r\n\r\n          linkList.push({\r\n            source: currNode,\r\n            target: nextNode,\r\n            link: currRoutine.params[ServerConfig.QUEUE_SEND]\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return linkList;\r\n  };\r\n\r\n  createNodesDOM = () => {\r\n    if (this.state.routineList) {\r\n      const nodesList = this.state.routineList.map((routine, index) => {\r\n        this.baseNodeRefs[\r\n          this.props.componentData.name + \"_item_\" + index\r\n        ] = React.createRef();\r\n\r\n        let randomColor = [\"green\", \"red\", \"blue\", \"orange\", \"grey\", \"purple\"][\r\n          index % 6\r\n        ];\r\n\r\n        randomColor =\r\n          \"linear-gradient(90deg, #343434 0%, \" + randomColor + \" 100%)\";\r\n        let ports = [];\r\n\r\n        if (routine.params[ServerConfig.QUEUE_READ]) {\r\n          ports.push(\"In\");\r\n        }\r\n        if (routine.params[ServerConfig.QUEUE_SEND]) {\r\n          ports.push(\"Out\");\r\n        }\r\n        if (ports.length === 0) {\r\n          ports.push(\"None\");\r\n        }\r\n\r\n        return (\r\n          <BaseNodeView\r\n            key={\"Node\" + index}\r\n            ref={\r\n              this.baseNodeRefs[\r\n                this.props.componentData.name + \"_item_\" + index\r\n              ]\r\n            }\r\n            nodeColor={randomColor}\r\n            routineName={routine.params.name}\r\n            routineTypeName={routine.routine_type_name}\r\n            ports={ports.join(\"/\")}\r\n          />\r\n        );\r\n      });\r\n\r\n      return <div className=\"flex-container\">{nodesList}</div>;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  deleteComponent = () => {\r\n    this.props.deleteComponent(this.props.componentData);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BaseComponentView\r\n        isSelected={\r\n          this.props.componentData && this.props.componentData.isSelected\r\n        }\r\n        componentData={this.props.componentData}\r\n        changeSelected={this.props.changeSelected}\r\n        deleteComponent={this.deleteComponent}\r\n        routineList={this.state.routineList}\r\n        linkList={this.composeLinks()}\r\n        nodeRefs={this.state.nodeRefs}\r\n      >\r\n        {this.createNodesDOM()}\r\n      </BaseComponentView>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BaseComponentContainer;\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme, Grid, Typography } from \"@material-ui/core\";\r\nimport BaseComponentContainer from \"../BaseComponent\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  title: {\r\n    fontSize: \"2em\",\r\n    textAlign: \"center\"\r\n  },\r\n  arrowMargin: {\r\n    marginTop: \"4em\",\r\n    textAlign: \"center\"\r\n  },\r\n  redisLogo: {\r\n    marginTop: \"4.5em\",\r\n    height: \"4em\"\r\n  },\r\n  arrow: {\r\n    height: \"3em\"\r\n  }\r\n}));\r\n\r\nexport default function PipelineView(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const getIOArrow = (IOData, isInput, noRedis) => {\r\n    if (!IOData || !IOData.redisKeys || !IOData.streamKeys) {\r\n      return null;\r\n    }\r\n\r\n    let IOTypes = [];\r\n    let IOKeys = [];\r\n\r\n    if (isInput) {\r\n      if (!IOData.redisKeys.redisIn && !IOData.streamKeys.streamIn) {\r\n        return null;\r\n      } else {\r\n        if (IOData.redisKeys.redisIn) {\r\n          IOTypes.push(\"REDIS\");\r\n          IOKeys.push(IOData.redisKeys.redisIn);\r\n        }\r\n        if (IOData.streamKeys.streamIn) {\r\n          IOTypes.push(\"STREAM\");\r\n          IOKeys.push(\r\n            IOData.streamKeys.streamIn.substring(\r\n              0,\r\n              Math.min(IOData.streamKeys.streamIn.length, 14)\r\n            ) + \"...\"\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      if (!IOData.redisKeys.redisOut && !IOData.streamKeys.streamOut) {\r\n        return null;\r\n      } else {\r\n        if (IOData.redisKeys.redisOut) {\r\n          IOTypes.push(\"REDIS\");\r\n          IOKeys.push(IOData.redisKeys.redisOut);\r\n        }\r\n        if (IOData.streamKeys.streamOut) {\r\n          IOTypes.push(\"STREAM\");\r\n          IOKeys.push(\r\n            IOData.streamKeys.streamOut.substring(\r\n              0,\r\n              Math.min(IOData.streamKeys.streamOut.length, 14)\r\n            ) + \"...\"\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      hasRedis: IOTypes.includes(\"REDIS\"),\r\n      html: (\r\n        <React.Fragment>\r\n          {isInput && IOTypes.includes(\"REDIS\") && !noRedis && (\r\n            <Grid item tag=\"redis\">\r\n              <img\r\n                src=\"./images/redisLogo.png\"\r\n                className={classes.redisLogo}\r\n              ></img>\r\n            </Grid>\r\n          )}\r\n          <Grid item>\r\n            <div className={classes.arrowMargin}>\r\n              <Typography variant=\"subtitle2\">\r\n                <b>TYPE:</b> {IOTypes.join(\", \")}\r\n              </Typography>\r\n              <div>\r\n                <img className={classes.arrow} src=\"./images/arrow.png\"></img>\r\n              </div>\r\n              <Typography variant=\"subtitle2\">\r\n                <b>KEY:</b> {IOKeys.join(\", \")}\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n          {!isInput && IOTypes.includes(\"REDIS\") && (\r\n            <Grid item tag=\"redis\">\r\n              <img\r\n                src=\"./images/redisLogo.png\"\r\n                className={classes.redisLogo}\r\n              ></img>\r\n            </Grid>\r\n          )}\r\n        </React.Fragment>\r\n      )\r\n    };\r\n  };\r\n\r\n  const composeComponentsDOM = components => {\r\n    let redisExistence = new Array(components.length).fill(false);\r\n\r\n    return components.map(function(comp, index) {\r\n      if (!comp.routines) {\r\n        comp.routines = [];\r\n      }\r\n\r\n      let IOData = props.getComponentIO(components[index]);\r\n      let prefixArrow = null;\r\n\r\n      if (index > 0 && redisExistence[index - 1]) {\r\n        prefixArrow = getIOArrow(IOData, true, true);\r\n      } else {\r\n        prefixArrow = getIOArrow(IOData, true);\r\n      }\r\n\r\n      prefixArrow = prefixArrow && prefixArrow.html;\r\n\r\n      let suffixArrow = getIOArrow(IOData, false);\r\n      if (suffixArrow) {\r\n        redisExistence[index] = suffixArrow.hasRedis;\r\n      }\r\n\r\n      suffixArrow = suffixArrow && suffixArrow.html;\r\n\r\n      return (\r\n        <React.Fragment key={\"Comp\" + index}>\r\n          {prefixArrow}\r\n          <BaseComponentContainer\r\n            changeSelected={props.changeSelectedComponent}\r\n            componentData={comp}\r\n            deleteComponent={props.deleteComponent}\r\n          />\r\n          {suffixArrow}\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      {composeComponentsDOM(props.components)}\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PipelineView from \"./pipeline-view\";\r\nimport ServerConfig from \"../../config/server\";\r\n\r\nexport class PipelineContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  setSelectedComponent() {\r\n    if (this.props.components) {\r\n      return this.props.components.map(comp => {\r\n        if (\r\n          this.props.selectedComponent &&\r\n          comp.name === this.props.selectedComponent.name\r\n        ) {\r\n          return {\r\n            ...comp,\r\n            isSelected: true\r\n          };\r\n        } else {\r\n          return {\r\n            ...comp,\r\n            isSelected: false\r\n          };\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getComponentIO = componentData => {\r\n    let streamKeys = {\r\n        streamIn: null,\r\n        streamOut: null\r\n      },\r\n      redisKeys = {\r\n        redisIn: null,\r\n        redisOut: null\r\n      };\r\n\r\n    if (\r\n      !componentData.routines ||\r\n      !Array.isArray(componentData.routines) ||\r\n      componentData.routines.length === 0\r\n    ) {\r\n      return {\r\n        streamKeys,\r\n        redisKeys\r\n      };\r\n    }\r\n\r\n    let firstRoutine = componentData.routines[0];\r\n    let finalRoutine =\r\n      componentData.routines[componentData.routines.length - 1];\r\n\r\n    if (firstRoutine.params && firstRoutine.params[ServerConfig.REDIS_READ]) {\r\n      redisKeys.redisIn = firstRoutine.params[ServerConfig.REDIS_READ];\r\n    }\r\n\r\n    if (firstRoutine.params && firstRoutine.params[\"url\"]) {\r\n      streamKeys.streamIn = firstRoutine.params[\"url\"];\r\n    }\r\n\r\n    if (finalRoutine.params && finalRoutine.params[ServerConfig.REDIS_SEND]) {\r\n      redisKeys.redisOut = finalRoutine.params[ServerConfig.REDIS_SEND];\r\n    }\r\n\r\n    return {\r\n      streamKeys,\r\n      redisKeys\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <PipelineView\r\n        changeSelectedComponent={this.props.changeSelectedComponent}\r\n        components={this.setSelectedComponent()}\r\n        deleteComponent={this.props.deleteComponent}\r\n        getComponentIO={this.getComponentIO}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PipelineContainer;\r\n","import PipelineContainer from \"./pipeline-container\";\r\nexport default PipelineContainer;\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button,\r\n  makeStyles,\r\n  Input,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport { Done, Clear } from \"@material-ui/icons\";\r\n\r\nexport default function RoutineFormView(props) {\r\n  const useStyles = makeStyles(theme => ({\r\n    yamlBrowse: {\r\n      marginTop: \"1em\"\r\n    },\r\n    cachedButton: {\r\n      fontSize: \"1.5em\"\r\n    },\r\n    yamlButton: {\r\n      marginLeft: \"1.5em\"\r\n    },\r\n    dialogTitle: {\r\n      borderBottomColor: \"black\",\r\n      borderBottomStyle: \"solid\",\r\n      borderBottomWidth: \"0.01rem\"\r\n    },\r\n    dialog: {\r\n      overflowY: \"auto\"\r\n    },\r\n    dialogActions: {\r\n      borderTopColor: \"black\",\r\n      borderTopStyle: \"solid\",\r\n      borderTopWidth: \"0.01rem\",\r\n      background: \"linear-gradient(90deg, #b2b2b2 0%, white 40%, white 70%)\"\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      className={classes.dialogBorder}\r\n      open={true}\r\n      fullWidth\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle className={classes.dialogTitle} id=\"alert-dialog-title\">\r\n        {\"LOAD-A-PIPELINE\"}\r\n      </DialogTitle>\r\n      <DialogContent className={classes.dialog}>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          CHOOSE AN OPTION:\r\n        </DialogContentText>\r\n        <Grid container alignItems=\"center\" justify=\"center\" spacing={2}>\r\n          <Grid item xs={5}>\r\n            <Button\r\n              size=\"large\"\r\n              className={classes.cachedButton}\r\n              variant=\"contained\"\r\n              color={props.selectedOption === \"CACHED\" ? \"primary\" : \"inherit\"}\r\n              disabled={!props.isLocalStorageAvailable()}\r\n              onClick={() => props.changeSelected(\"CACHED\")}\r\n            >\r\n              LOAD CACHED PIPELINE\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Button\r\n              size=\"large\"\r\n              className={classes.yamlButton}\r\n              variant=\"contained\"\r\n              color={props.selectedOption === \"YAML\" ? \"primary\" : \"inherit\"}\r\n              onClick={() => props.changeSelected(\"YAML\")}\r\n            >\r\n              LOAD .YAML FILE\r\n            </Button>\r\n            <Input\r\n              className={classes.yamlBrowse}\r\n              disabled={props.selectedOption !== \"YAML\"}\r\n              type=\"file\"\r\n              onChange={props.onFileChange}\r\n              inputProps={{\r\n                accept: \".yaml,.yml\"\r\n              }}\r\n            ></Input>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button color=\"secondary\" onClick={props.togglePipelineForm} autoFocus>\r\n          <Clear />\r\n          CLOSE\r\n        </Button>\r\n        <Button\r\n          disabled={\r\n            !props.selectedOption ||\r\n            (props.selectedOption === \"YAML\" && !props.chosenFile)\r\n          }\r\n          onClick={props.loadPipeline}\r\n          color=\"primary\"\r\n          autoFocus\r\n        >\r\n          <Done />\r\n          LOAD\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PipelineFormView from \"./pipeline-form-view\";\r\n\r\nexport class PipelineFormContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedOption: null\r\n    };\r\n  }\r\n\r\n  isLocalStorageAvailable = () => {\r\n    return localStorage.getItem(\"lastPipeline\");\r\n  };\r\n\r\n  changeSelected = selectedOption => {\r\n    this.setState({\r\n      selectedOption\r\n    });\r\n  };\r\n\r\n  onFileChange = e => {\r\n    this.setState({\r\n      chosenFile: e.target.files[0]\r\n    });\r\n  };\r\n\r\n  loadPipeline = () => {\r\n    if (this.state.selectedOption === \"CACHED\") {\r\n      this.props.loadPipeline(localStorage.getItem(\"lastPipeline\"), false);\r\n    } else {\r\n      const fileReader = new FileReader();\r\n      fileReader.onloadend = reader => {\r\n        this.props.loadPipeline(reader.target && reader.target.result, true);\r\n      };\r\n\r\n      fileReader.readAsText(this.state.chosenFile);\r\n    }\r\n\r\n    this.props.togglePipelineForm();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <PipelineFormView\r\n        togglePipelineForm={this.props.togglePipelineForm}\r\n        changeSelected={this.changeSelected}\r\n        selectedOption={this.state.selectedOption}\r\n        onFileChange={this.onFileChange}\r\n        loadPipeline={this.loadPipeline}\r\n        chosenFile={this.state.chosenFile}\r\n        isLocalStorageAvailable={this.isLocalStorageAvailable}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PipelineFormContainer;\r\n","import PipelineFormContainer from \"./pipeline-form-container\";\r\nexport default PipelineFormContainer;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  makeStyles,\r\n  Fab,\r\n  Typography,\r\n  Grid,\r\n  Link,\r\n  Snackbar,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { Add, Done, Clear, FileCopy } from \"@material-ui/icons\";\r\nimport ComponentFormContainer from \"../ComponentForm\";\r\nimport PipelineContainer from \"../Pipeline\";\r\nimport PipelineFormContainer from \"../PipelineForm\";\r\n\r\nconst loadingPhrases = [\r\n  \"GIVING IT A TRY\",\r\n  \"TRYING MY BEST\",\r\n  \"HOLD ON TIGHT\",\r\n  \"JUST A SECOND\"\r\n];\r\n\r\nexport default function WorkAreaView(props) {\r\n  const useStyles = makeStyles(theme => ({\r\n    content: {\r\n      flexGrow: 1,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      }),\r\n      marginLeft: 50,\r\n      marginRight: 50\r\n    },\r\n    contentShift: {\r\n      marginLeft: 260,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      })\r\n    },\r\n    componentFab: {\r\n      position: \"absolute\",\r\n      bottom: theme.spacing(17),\r\n      right: theme.spacing(2),\r\n      minWidth: \"20em\"\r\n    },\r\n    pipelineOptions: {\r\n      position: \"absolute\",\r\n      bottom: theme.spacing(13),\r\n      right: theme.spacing(11)\r\n    },\r\n    loadFab: {\r\n      position: \"absolute\",\r\n      bottom: theme.spacing(6),\r\n      right: theme.spacing(26)\r\n    },\r\n    killFab: {\r\n      position: \"absolute\",\r\n      bottom: theme.spacing(6),\r\n      right: theme.spacing(14.5)\r\n    },\r\n    saveFab: {\r\n      position: \"absolute\",\r\n      bottom: theme.spacing(6),\r\n      right: theme.spacing(2),\r\n      backgroundColor: \"#81c784\"\r\n    },\r\n    spinner: {\r\n      textAlign: \"center\",\r\n      position: \"absolute\",\r\n      bottom: theme.spacing(25),\r\n      right: theme.spacing(11)\r\n    },\r\n    credits: {\r\n      position: \"absolute\",\r\n      bottom: theme.spacing(1),\r\n      right: theme.spacing(5),\r\n      backgroundColor: \"#c5c5c52e\",\r\n      borderRadius: \"5em\",\r\n      paddingLeft: \"0.4em\",\r\n      paddingRight: \"0.4em\",\r\n      fontStyle: \"italic\"\r\n    },\r\n    emptyWorkArea: {\r\n      minHeight: \"80vh\"\r\n    },\r\n    thinText: {\r\n      fontFamily: \"Roboto Thin\"\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.content, {\r\n        [classes.contentShift]: props.isSideBarOpen\r\n      })}\r\n    >\r\n      <Snackbar\r\n        open={props.showSuccessMessage}\r\n        autoHideDuration={6000}\r\n        onClose={props.toggleSuccessMessage}\r\n      >\r\n        <MuiAlert variant=\"filled\" severity=\"success\">\r\n          <b>\r\n            PIPELINE IS {props.successMessage ? props.successMessage : \"SAVED\"}{\" \"}\r\n            SUCCESSFULLY! 😊\r\n          </b>\r\n        </MuiAlert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        open={props.showErrorMessage}\r\n        autoHideDuration={6000}\r\n        onClose={props.toggleErrorMessage}\r\n      >\r\n        <MuiAlert variant=\"filled\" severity=\"error\">\r\n          <b>\r\n            PIPELINE COULD NOT BE{\" \"}\r\n            {props.errorMessage ? props.errorMessage : \"SAVED\"}\r\n            {\" 😔 \"}\r\n            PLEASE TRY AGAIN LATER.\r\n          </b>\r\n        </MuiAlert>\r\n      </Snackbar>\r\n\r\n      {props.components.length === 0 ? (\r\n        <div>\r\n          <Grid\r\n            container\r\n            spacing={16}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n            className={classes.emptyWorkArea}\r\n          >\r\n            <div>\r\n              <Typography className={classes.thinText} variant=\"h3\">\r\n                YOUR WORK AREA IS EMPTY.\r\n              </Typography>\r\n            </div>\r\n            <div>\r\n              <Typography variant=\"h2\">TRY CREATING A COMPONENT!</Typography>\r\n            </div>\r\n          </Grid>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <PipelineContainer\r\n            components={props.components}\r\n            routines={props.routines}\r\n            changeSelectedComponent={props.changeSelectedComponent}\r\n            selectedComponent={props.selectedComponent}\r\n            deleteComponent={props.deleteComponent}\r\n          ></PipelineContainer>\r\n        </div>\r\n      )}\r\n      {props.showComponentForm && (\r\n        <ComponentFormContainer\r\n          createComponent={props.createComponent}\r\n          toggleComponentForm={props.toggleComponentForm}\r\n        />\r\n      )}\r\n      {props.showPipelineForm && (\r\n        <PipelineFormContainer\r\n          loadPipeline={props.loadPipeline}\r\n          togglePipelineForm={props.togglePipelineForm}\r\n        />\r\n      )}\r\n      <Fab\r\n        disabled={props.components.length >= 6}\r\n        onClick={() => props.toggleComponentForm(true)}\r\n        className={classes.componentFab}\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        variant=\"extended\"\r\n        aria-label=\"add\"\r\n      >\r\n        <Add />\r\n        COMPONENT\r\n      </Fab>\r\n      <div className={classes.pipelineOptions}>\r\n        <b>PIPELINE OPTIONS:</b>\r\n      </div>\r\n      <Fab\r\n        onClick={() => props.togglePipelineForm()}\r\n        className={classes.loadFab}\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        variant=\"extended\"\r\n        aria-label=\"add\"\r\n      >\r\n        <FileCopy />\r\n        LOAD\r\n      </Fab>\r\n      <Fab\r\n        disabled={props.components.length < 1}\r\n        onClick={props.killPipeline}\r\n        className={classes.killFab}\r\n        size=\"large\"\r\n        color=\"secondary\"\r\n        variant=\"extended\"\r\n        aria-label=\"add\"\r\n      >\r\n        <Clear />\r\n        KILL\r\n      </Fab>\r\n      <Fab\r\n        disabled={props.components.length < 1}\r\n        onClick={props.savePipeline}\r\n        className={classes.saveFab}\r\n        size=\"large\"\r\n        color=\"inherit\"\r\n        variant=\"extended\"\r\n        aria-label=\"add\"\r\n      >\r\n        <Done />\r\n        SAVE\r\n      </Fab>\r\n      {props.showSpinner && (\r\n        <div className={classes.spinner}>\r\n          <CircularProgress size=\"1.5rem\" />\r\n          <Typography variant=\"subtitle1\">\r\n            <b>\r\n              {loadingPhrases[\r\n                Math.floor(Math.random() * loadingPhrases.length)\r\n              ] + \"...\"}\r\n            </b>\r\n          </Typography>\r\n        </div>\r\n      )}\r\n      <Typography className={classes.credits}>\r\n        PipeRT © 2020&nbsp;\r\n        <Link href=\"https://github.com/ItamarWilf/PipeRT\">\r\n          Visit our GitHub\r\n        </Link>\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n","import { TransformSharp, SettingsSharp, CreateSharp } from \"@material-ui/icons\";\r\nimport WorkAreaContainer from \"../components/WorkArea\";\r\n\r\nexport default {\r\n  home: {\r\n    dispName: \"WORK AREA\",\r\n    path: \"/\",\r\n    component: WorkAreaContainer,\r\n    icon: CreateSharp\r\n  }\r\n  // mypipes: {\r\n  //   dispName: \"MY PIPELINES\",\r\n  //   path: \"/mypipes\",\r\n  //   explicit: true,\r\n  //   component: \"MyPipes\",\r\n  //   icon: TransformSharp\r\n  // },\r\n  // settings: {\r\n  //   dispName: \"SETTINGS\",\r\n  //   path: \"/settings\",\r\n  //   explicit: true,\r\n  //   component: \"Settings\",\r\n  //   icon: SettingsSharp\r\n  // }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport WorkAreaView from \"./work-area-view\";\r\nimport ServerConfig from \"../../config/server\";\r\nimport YAML from \"json-to-pretty-yaml\";\r\nimport jsYAML from \"js-yaml\";\r\nimport ServerUtils from \"../../utils/ServerUtils\";\r\n\r\nexport class WorkAreaContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      successMessage: \"\",\r\n      showSuccessMessage: false,\r\n      showPipelineForm: false,\r\n      showSpinner: false\r\n    };\r\n  }\r\n\r\n  toggleSpinner = toggleState => {\r\n    let spinnerState = !this.state.showSpinner;\r\n\r\n    if (toggleState === \"ON\") {\r\n      spinnerState = true;\r\n    } else if (toggleState === \"OFF\") {\r\n      spinnerState = false;\r\n    }\r\n\r\n    this.setState({\r\n      showSpinner: spinnerState\r\n    });\r\n  };\r\n\r\n  togglePipelineForm = () => {\r\n    this.setState({\r\n      showPipelineForm: !this.state.showPipelineForm\r\n    });\r\n  };\r\n\r\n  loadPipeline = async (buffer, isYaml) => {\r\n    let pipelineData;\r\n    let routineList = await ServerUtils.getRoutines();\r\n    let routineTypes = {};\r\n\r\n    routineList.forEach(routine => {\r\n      routineTypes[routine.name] = routine.type;\r\n    });\r\n\r\n    if (isYaml) {\r\n      pipelineData = jsYAML.load(buffer);\r\n      pipelineData = pipelineData.map(comp => {\r\n        return {\r\n          name: comp.name,\r\n          routines:\r\n            comp.routines &&\r\n            comp.routines.map(routine => {\r\n              let paramsObject = { ...routine };\r\n              delete paramsObject.routine_type_name;\r\n\r\n              return {\r\n                routine_type_name: routine.routine_type_name,\r\n                routine_type: routineTypes[routine.routine_type_name],\r\n                params: { ...paramsObject }\r\n              };\r\n            })\r\n        };\r\n      });\r\n    } else {\r\n      pipelineData = JSON.parse(buffer);\r\n    }\r\n\r\n    this.props.setPipeline(pipelineData);\r\n  };\r\n\r\n  killPipeline = () => {\r\n    this.toggleSpinner(\"ON\");\r\n\r\n    ServerUtils.killPipeline()\r\n      .then(() => {\r\n        this.toggleSuccessMessage(\"KILLED\");\r\n        this.toggleSpinner(\"OFF\");\r\n      })\r\n      .catch(() => {\r\n        this.toggleErrorMessage(\"KILLED\");\r\n        this.toggleSpinner(\"OFF\");\r\n      });\r\n  };\r\n\r\n  savePipeline = () => {\r\n    this.toggleSpinner(\"ON\");\r\n    let userComponents = [...this.props.components];\r\n    let componentsToSend = [];\r\n\r\n    if (Array.isArray(userComponents) && userComponents.length > 0) {\r\n      localStorage.setItem(\"lastPipeline\", JSON.stringify(userComponents));\r\n\r\n      userComponents.forEach((currentComponent, index) => {\r\n        componentsToSend.push({\r\n          name: currentComponent.name,\r\n          queues: []\r\n        });\r\n\r\n        if (\r\n          Array.isArray(currentComponent.routines) &&\r\n          currentComponent.routines.length > 0\r\n        ) {\r\n          componentsToSend[index].routines = [];\r\n\r\n          for (\r\n            let currRoutineIndex = 0;\r\n            currRoutineIndex < currentComponent.routines.length;\r\n            currRoutineIndex++\r\n          ) {\r\n            let currRoutine = currentComponent.routines[currRoutineIndex];\r\n            componentsToSend[index].routines.push({\r\n              routine_type_name: currRoutine.routine_type_name,\r\n              ...currRoutine.params\r\n            });\r\n\r\n            Object.keys(currRoutine.params).forEach(currParam => {\r\n              let parameterValue = currRoutine.params[currParam];\r\n\r\n              if (\r\n                !componentsToSend[index].queues.includes(parameterValue) &&\r\n                (currParam === ServerConfig.QUEUE_READ ||\r\n                  currParam === ServerConfig.QUEUE_SEND)\r\n              ) {\r\n                componentsToSend[index].queues.push(parameterValue);\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    ServerUtils.savePipeline(componentsToSend)\r\n      .then(() => {\r\n        let filename = \"PipelineExport.yaml\";\r\n        let contentType = \"application/text;charset=utf-8;\";\r\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n          var blob = new Blob(\r\n            [decodeURIComponent(encodeURI(YAML.stringify(componentsToSend)))],\r\n            { type: contentType }\r\n          );\r\n          navigator.msSaveOrOpenBlob(blob, filename);\r\n        } else {\r\n          var a = document.createElement(\"a\");\r\n          a.download = filename;\r\n          a.href =\r\n            \"data:\" +\r\n            contentType +\r\n            \",\" +\r\n            encodeURIComponent(YAML.stringify(componentsToSend));\r\n          a.target = \"_blank\";\r\n          document.body.appendChild(a);\r\n          a.click();\r\n          document.body.removeChild(a);\r\n        }\r\n\r\n        this.toggleSuccessMessage(\"SAVED\");\r\n        this.toggleSpinner(\"OFF\");\r\n      })\r\n      .catch(() => {\r\n        this.toggleErrorMessage(\"SAVED\");\r\n        this.toggleSpinner(\"OFF\");\r\n      });\r\n  };\r\n\r\n  toggleErrorMessage = errorMessage => {\r\n    this.setState({\r\n      errorMessage:\r\n        typeof errorMessage === \"string\"\r\n          ? errorMessage.toString()\r\n          : this.state.errorMessage,\r\n      showErrorMessage: !this.state.showErrorMessage\r\n    });\r\n  };\r\n\r\n  toggleSuccessMessage = successMessage => {\r\n    this.setState({\r\n      successMessage:\r\n        typeof successMessage === \"string\"\r\n          ? successMessage.toString()\r\n          : this.state.successMessage,\r\n      showSuccessMessage: !this.state.showSuccessMessage\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <WorkAreaView\r\n        togglePipelineForm={this.togglePipelineForm}\r\n        loadPipeline={this.loadPipeline}\r\n        savePipeline={this.savePipeline}\r\n        killPipeline={this.killPipeline}\r\n        changeSelectedComponent={this.props.changeSelectedComponent}\r\n        createComponent={this.props.createComponent}\r\n        createRoutine={this.props.createRoutine}\r\n        toggleComponentForm={this.props.toggleComponentForm}\r\n        components={this.props.components}\r\n        isSideBarOpen={this.props.isSideBarOpen}\r\n        showComponentForm={this.props.showComponentForm}\r\n        showPipelineForm={this.state.showPipelineForm}\r\n        selectedComponent={this.props.selectedComponent}\r\n        deleteComponent={this.props.deleteComponent}\r\n        showSuccessMessage={this.state.showSuccessMessage}\r\n        showErrorMessage={this.state.showErrorMessage}\r\n        toggleSuccessMessage={this.toggleSuccessMessage}\r\n        toggleErrorMessage={this.toggleErrorMessage}\r\n        successMessage={this.state.successMessage}\r\n        errorMessage={this.state.errorMessage}\r\n        showSpinner={this.state.showSpinner}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkAreaContainer;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch, Redirect, Link } from \"react-router-dom\";\r\nimport TopBarContainer from \"../TopBar\";\r\nimport SideBarContainer from \"../Sidebar\";\r\nimport {\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  StylesProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport RoutesConfig from \"../../config/routes\";\r\nimport ComponentUtils from \"../../utils/ComponentUtils\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#2296f3\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: \"Roboto, Arial\",\r\n  },\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      \"@global\": {\r\n        body: {\r\n          backgroundImage: \"url(./images/backgroundImage.jpg)\",\r\n          backgroundSize: \"cover\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport class MasterContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      components: [],\r\n      showComponentForm: false,\r\n      selectedComponent: null,\r\n      isSideBarOpen: false,\r\n      isComponentSelected: false,\r\n    };\r\n  }\r\n\r\n  setPipeline = (pipeline) => {\r\n    this.setState({\r\n      components: pipeline,\r\n    });\r\n  };\r\n\r\n  createComponent = (name) => {\r\n    this.setState({\r\n      components: ComponentUtils.createComponent(this.state.components, name),\r\n    });\r\n\r\n    this.toggleComponentForm(false);\r\n  };\r\n\r\n  deleteComponent = (componentData) => {\r\n    this.setState({\r\n      components: ComponentUtils.deleteComponent(\r\n        this.state.components,\r\n        componentData.name\r\n      ),\r\n    });\r\n\r\n    if (\r\n      this.state.selectedComponent &&\r\n      componentData.name === this.state.selectedComponent.name\r\n    ) {\r\n      this.changeSelectedComponent(null);\r\n    }\r\n  };\r\n\r\n  changeSelectedComponent = (componentData) => {\r\n    if (componentData && componentData.name) {\r\n      this.setState({\r\n        selectedComponent: componentData,\r\n      });\r\n\r\n      this.setComponentSelectedState(true);\r\n    } else {\r\n      this.setState({\r\n        selectedComponent: null,\r\n      });\r\n\r\n      this.setComponentSelectedState(false);\r\n    }\r\n  };\r\n\r\n  setComponentSelectedState = (stateToSet) => {\r\n    this.setState({\r\n      isComponentSelected: stateToSet,\r\n    });\r\n  };\r\n\r\n  toggleComponentForm = (toggleMode) => {\r\n    this.setState({\r\n      showComponentForm: toggleMode,\r\n    });\r\n  };\r\n\r\n  createRoutine = (routineWithParams) => {\r\n    let { components, updatedComponent } = ComponentUtils.createRoutine(\r\n      this.state.components,\r\n      this.state.selectedComponent.name,\r\n      routineWithParams\r\n    );\r\n\r\n    this.setState({\r\n      components,\r\n    });\r\n\r\n    this.changeSelectedComponent(updatedComponent);\r\n  };\r\n\r\n  toggleSideBar = () => {\r\n    this.setState({\r\n      isSideBarOpen: !this.state.isSideBarOpen,\r\n    });\r\n  };\r\n\r\n  createRoutes = (routes = {}) => {\r\n    return Object.keys(routes).map(\r\n      function (routeKey) {\r\n        let routeData = routes[routeKey];\r\n        let TagName = routeData.component;\r\n\r\n        if (routeData.explicit)\r\n          return (\r\n            <Route\r\n              exact\r\n              path={routeData.path}\r\n              render={() => <TagName isSideBarOpen={true} />}\r\n            />\r\n          );\r\n        return (\r\n          <Route\r\n            path={routeData.path}\r\n            render={() => (\r\n              <TagName\r\n                changeSelectedComponent={this.changeSelectedComponent}\r\n                createComponent={this.createComponent}\r\n                createRoutine={this.createRoutine}\r\n                toggleComponentForm={this.toggleComponentForm}\r\n                components={this.state.components}\r\n                showComponentForm={this.state.showComponentForm}\r\n                selectedComponent={this.state.selectedComponent}\r\n                deleteComponent={this.deleteComponent}\r\n                isSideBarOpen={true}\r\n                setPipeline={this.setPipeline}\r\n              />\r\n            )}\r\n          />\r\n        );\r\n      }.bind(this)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <StylesProvider>\r\n          <CssBaseline />\r\n          <BrowserRouter>\r\n            <TopBarContainer\r\n              isSideBarOpen={true}\r\n              toggleSideBar={this.toggleSideBar}\r\n            />\r\n            <SideBarContainer\r\n              components={this.state.components}\r\n              selectedComponent={this.state.selectedComponent}\r\n              routes={RoutesConfig}\r\n              toggleSideBar={this.toggleSideBar}\r\n              isSideBarOpen={true}\r\n              createRoutine={this.createRoutine}\r\n              isComponentSelected={this.state.isComponentSelected}\r\n            />\r\n            <Switch>{this.createRoutes(RoutesConfig)}</Switch>\r\n          </BrowserRouter>\r\n        </StylesProvider>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MasterContainer;\r\n","import MasterContainer from \"./master-container\";\r\nexport default MasterContainer;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport MasterContainer from \"./components/Master\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<MasterContainer />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}